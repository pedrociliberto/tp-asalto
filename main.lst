     1                                  %macro mPuts 1 ; Imprime el string %1, hasta encontrar un 0
     2                                      mov rdi, %1
     3                                      sub rsp, 8
     4                                      call puts
     5                                      add rsp, 8
     6                                  %endmacro
     7                                  
     8                                  %macro mPrint 2 ; Imprime el string %2 con formato %1
     9                                      mov rdi, %1
    10                                      mov rsi, %2
    11                                      sub rsp, 8
    12                                      call printf
    13                                      add rsp, 8
    14                                  %endmacro
    15                                  
    16                                  %macro mGets 1 ; Obtiene un string por teclado, guardándolo en %1
    17                                      mov rdi, %1
    18                                      sub rsp, 8
    19                                      call gets
    20                                      add rsp, 8
    21                                  %endmacro
    22                                  
    23                                  %macro mCommand 1 ; Ejecuta el comando %1 de la terminal
    24                                      mov rdi, %1
    25                                      sub rsp, 8
    26                                      call system
    27                                      add rsp, 8
    28                                  %endmacro
    29                                  
    30                                  %macro mMov 3 ; Copia %3 bytes del campo de memoria %2 al campo de memoria %1
    31                                      mov rcx, %3
    32                                      lea rsi, [%2]
    33                                      lea rdi, [%1]
    34                                      rep movsb
    35                                  %endmacro
    36                                  
    37                                  %macro mCmp 3 ; Compara %3 bytes del campo %1 con %2
    38                                      mov rcx, %3
    39                                      lea rsi, %1
    40                                      lea rdi, %2
    41                                      repe cmpsb
    42                                  %endmacro 
    43                                  
    44                                  %macro mErrorJump 2 ; Imprime el mensaje de error %1 y salta a la etiqueta %2
    45                                      mPuts %1
    46                                      jmp %2
    47                                  %endmacro
    48                                  
    49                                  %macro mfGets 2
    50                                      mov rdi, %1
    51                                      mov rsi, %2
    52                                      mov rdx, [stdin]
    53                                      sub rsp, 8
    54                                      call fgets
    55                                      add rsp, 8
    56                                  %endmacro
    57                                  
    58                                  %macro mLeerEntradaEstandar 2
    59                                      mov rax, 0      ; syscall: read
    60                                      mov rdi, 0      ; 0: stdin
    61                                      mov rsi, %1   ; buffer (direccion de guardado de lo leido)
    62                                      mov rdx, %2     ; Cuantos bytes queremos leer
    63                                      syscall
    64                                  
    65                                      mov byte[rsi+rax], 0
    66                                  %endmacro
    67                                  
    68                                  %macro mSscanf 3
    69                                      lea rdi, %1     ; Variable Original string
    70                                      mov rsi, %2     ; Formato
    71                                      mov rdx, %3     ; Variable a guardar el int
    72                                      sub rsp, 8
    73                                      call sscanf
    74                                      add rsp, 8
    75                                  %endmacro
    76                                  
    77                                  %macro mAtoi 2
    78                                      lea rdi, %1
    79                                      sub rsp, 8
    80                                      call atoi
    81                                      add rsp, 8
    82                                      mov [%2], eax
    83                                  %endmacro
    84                                  
    85                                  
    86                                  extern puts, printf
    87                                  extern gets
    88                                  extern system, stdin
    89                                  extern fgets
    90                                  extern atoi
    91                                  extern sscanf
    92                                  
    93                                  section .data
    94                                  
    95                                      ; Tableros y sus posibles estados
    96                                  
    97 00000000 202031323334353637-         tableroOrig         db " "," ","1","2","3","4","5","6","7"," ",10
    97 00000009 200A               
    98 0000000B 202020205F5F5F2020-                             db " "," "," "," ","_","_","_"," "," "," ",10 
    98 00000014 200A               
    99 00000016 3120207C5858587C20-                             db "1"," "," ","|","X","X","X","|"," "," ",10
    99 0000001F 200A               
   100 00000021 32205F7C5858587C5F-                             db "2"," ","_","|","X","X","X","|","_"," ",10
   100 0000002A 200A               
   101 0000002C 337C58585858585858-                             db "3","|","X","X","X","X","X","X","X","|",10 
   101 00000035 7C0A               
   102 00000037 347C58585858585858-                             db "4","|","X","X","X","X","X","X","X","|",10 
   102 00000040 7C0A               
   103 00000042 357C58582020205858-                             db "5","|","X","X"," "," "," ","X","X","|",10 
   103 0000004B 7C0A               
   104 0000004D 36202D7C4F20207C2D-                             db "6"," ","-","|","O"," "," ","|","-"," ",10 
   104 00000056 200A               
   105 00000058 3720207C20204F7C20-                             db "7"," "," ","|"," "," ","O","|"," "," ",10 
   105 00000061 200A               
   106 00000063 202020202D2D2D2020-                             db " "," "," "," ","-","-","-"," "," "," ",10,0
   106 0000006C 200A00             
   107                                  
   108 0000006F 202031323334353637-         tableroInv          db " "," ","1","2","3","4","5","6","7"," ",10
   108 00000078 200A               
   109 0000007A 202020205F5F5F2020-                             db " "," "," "," ","_","_","_"," "," "," ",10 
   109 00000083 200A               
   110 00000085 3120207C4F20207C20-                             db "1"," "," ","|","O"," "," ","|"," "," ",10
   110 0000008E 200A               
   111 00000090 32205F7C20204F7C5F-                             db "2"," ","_","|"," "," ","O","|","_"," ",10
   111 00000099 200A               
   112 0000009B 337C58582020205858-                             db "3","|","X","X"," "," "," ","X","X","|",10 
   112 000000A4 7C0A               
   113 000000A6 347C58585858585858-                             db "4","|","X","X","X","X","X","X","X","|",10 
   113 000000AF 7C0A               
   114 000000B1 357C58585858585858-                             db "5","|","X","X","X","X","X","X","X","|",10 
   114 000000BA 7C0A               
   115 000000BC 3620C2AF7C5858587C-                             db "6"," ","¯","|","X","X","X","|","¯"," ",10 
   115 000000C5 C2AF200A           
   116 000000C9 3720207C5858587C20-                             db "7"," "," ","|","X","X","X","|"," "," ",10 
   116 000000D2 200A               
   117 000000D4 20202020C2AFC2AFC2-                             db " "," "," "," ","¯","¯","¯"," "," "," ",10,0
   117 000000DD AF2020200A00       
   118                                  
   119 000000E3 202031323334353637-         tableroDer          db " "," ","1","2","3","4","5","6","7"," ",10
   119 000000EC 200A               
   120 000000EE 202020205F5F5F2020-                             db " "," "," "," ","_","_","_"," "," "," ",10 
   120 000000F7 200A               
   121 000000F9 3120207C5858587C20-                             db "1"," "," ","|","X","X","X","|"," "," ",10
   121 00000102 200A               
   122 00000104 32205F7C5858587C5F-                             db "2"," ","_","|","X","X","X","|","_"," ",10
   122 0000010D 200A               
   123 0000010F 337C5858585820204F-                             db "3","|","X","X","X","X"," "," ","O","|",10 
   123 00000118 7C0A               
   124 0000011A 347C58585858202020-                             db "4","|","X","X","X","X"," "," "," ","|",10 
   124 00000123 7C0A               
   125 00000125 357C58585858204F20-                             db "5","|","X","X","X","X"," ","O"," ","|",10 
   125 0000012E 7C0A               
   126 00000130 3620C2AF7C5858587C-                             db "6"," ","¯","|","X","X","X","|","¯"," ",10 
   126 00000139 C2AF200A           
   127 0000013D 3720207C5858587C20-                             db "7"," "," ","|","X","X","X","|"," "," ",10 
   127 00000146 200A               
   128 00000148 20202020C2AFC2AFC2-                             db " "," "," "," ","¯","¯","¯"," "," "," ",10,0
   128 00000151 AF2020200A00       
   129                                  
   130 00000157 202031323334353637-         tableroIzq          db " "," ","1","2","3","4","5","6","7"," ",10
   130 00000160 200A               
   131 00000162 202020205F5F5F2020-                             db " "," "," "," ","_","_","_"," "," "," ",10 
   131 0000016B 200A               
   132 0000016D 3120207C5858587C20-                             db "1"," "," ","|","X","X","X","|"," "," ",10
   132 00000176 200A               
   133 00000178 32205F7C5858587C5F-                             db "2"," ","_","|","X","X","X","|","_"," ",10
   133 00000181 200A               
   134 00000183 337C4F202058585858-                             db "3","|","O"," "," ","X","X","X","X","|",10 
   134 0000018C 7C0A               
   135 0000018E 347C20202058585858-                             db "4","|"," "," "," ","X","X","X","X","|",10 
   135 00000197 7C0A               
   136 00000199 357C204F2058585858-                             db "5","|"," ","O"," ","X","X","X","X","|",10 
   136 000001A2 7C0A               
   137 000001A4 3620C2AF7C5858587C-                             db "6"," ","¯","|","X","X","X","|","¯"," ",10 
   137 000001AD C2AF200A           
   138 000001B1 3720207C5858587C20-                             db "7"," "," ","|","X","X","X","|"," "," ",10 
   138 000001BA 200A               
   139 000001BC 20202020C2AFC2AFC2-                             db " "," "," "," ","¯","¯","¯"," "," "," ",10,0
   139 000001C5 AF2020200A00       
   140                                  
   141                                      ; Mensajes
   142                                  
   143 000001CB C2A14269656E76656E-         msgBienvenida           db "¡Bienvenido al juego El Asalto!", 0
   143 000001D4 69646F20616C206A75-
   143 000001DD 65676F20456C204173-
   143 000001E6 616C746F2100       
   144                                  
   145 000001EC C2BF44657365612070-         msgPersonalizarTablero  db "¿Desea personalizar el tablero? (s/n): ", 0 
   145 000001F5 6572736F6E616C697A-
   145 000001FE 617220656C20746162-
   145 00000207 6C65726F3F2028732F-
   145 00000210 6E293A2000         
   146                                  
   147 00000215 4F706369C3B36E2069-         msgOpcionInvalida       db "Opción inválida. Intente de nuevo.", 0
   147 0000021E 6E76C3A16C6964612E-
   147 00000227 20496E74656E746520-
   147 00000230 6465206E7565766F2E-
   147 00000239 00                 
   148                                      
   149 0000023A 436173696C6C612069-         msgCasillaInvalidaSold  db "Casilla inválida: no hay un soldado en esa casilla. Intente de nuevo.", 0
   149 00000243 6E76C3A16C6964613A-
   149 0000024C 206E6F206861792075-
   149 00000255 6E20736F6C6461646F-
   149 0000025E 20656E206573612063-
   149 00000267 6173696C6C612E2049-
   149 00000270 6E74656E7465206465-
   149 00000279 206E7565766F2E00   
   150 00000281 4572726F7220656E20-         msgErrorInputSold       db "Error en el formato de entrada del soldado. Intente de nuevo.", 0
   150 0000028A 656C20666F726D6174-
   150 00000293 6F20646520656E7472-
   150 0000029C 6164612064656C2073-
   150 000002A5 6F6C6461646F2E2049-
   150 000002AE 6E74656E7465206465-
   150 000002B7 206E7565766F2E00   
   151                                  
   152 000002BF 436173696C6C612069-         msgCasillaInvalidaOfic  db "Casilla inválida: no hay un oficial en esa casilla. Intente de nuevo.", 0
   152 000002C8 6E76C3A16C6964613A-
   152 000002D1 206E6F206861792075-
   152 000002DA 6E206F66696369616C-
   152 000002E3 20656E206573612063-
   152 000002EC 6173696C6C612E2049-
   152 000002F5 6E74656E7465206465-
   152 000002FE 206E7565766F2E00   
   153 00000306 4572726F7220656E20-         msgErrorInputOfic       db "Error en el formato de entrada del oficial. Intente de nuevo.", 0
   153 0000030F 656C20666F726D6174-
   153 00000318 6F20646520656E7472-
   153 00000321 6164612064656C206F-
   153 0000032A 66696369616C2E2049-
   153 00000333 6E74656E7465206465-
   153 0000033C 206E7565766F2E00   
   154                                  
   155 00000344 C2A153652070756564-         msgPregRotacion         db "¡Se puede rotar el tablero! Elija una de las opciones (1-4):", 0
   155 0000034D 6520726F7461722065-
   155 00000356 6C207461626C65726F-
   155 0000035F 2120456C696A612075-
   155 00000368 6E61206465206C6173-
   155 00000371 206F7063696F6E6573-
   155 0000037A 2028312D34293A00   
   156 00000382 312E20526F74617220-         msgRotacionesPosibles   db "1. Rotar a la izquierda", 10
   156 0000038B 61206C6120697A7175-
   156 00000394 69657264610A       
   157 0000039A 322E20526F74617220-                                 db "2. Rotar a la derecha", 10
   157 000003A3 61206C612064657265-
   157 000003AC 6368610A           
   158 000003B0 332E20496E76657274-                                 db "3. Invertir el tablero", 10
   158 000003B9 697220656C20746162-
   158 000003C2 6C65726F0A         
   159 000003C7 342E204E6F20726F74-                                 db "4. No rotar", 0
   159 000003D0 617200             
   160                                      
   161 000003D3 C2A1456C696A616D6F-         msgPersonalizarSimb     db "¡Elijamos los símbolos para cada personaje! Escriba un solo caracter para cada uno (si escribe más, nos quedaremos con el primero).", 0
   161 000003DC 73206C6F732073C3AD-
   161 000003E5 6D626F6C6F73207061-
   161 000003EE 726120636164612070-
   161 000003F7 6572736F6E616A6521-
   161 00000400 204573637269626120-
   161 00000409 756E20736F6C6F2063-
   161 00000412 617261637465722070-
   161 0000041B 617261206361646120-
   161 00000424 756E6F202873692065-
   161 0000042D 736372696265206DC3-
   161 00000436 A1732C206E6F732071-
   161 0000043F 7565646172656D6F73-
   161 00000448 20636F6E20656C2070-
   161 00000451 72696D65726F292E00 
   162 0000045A 53C3AD6D626F6C6F20-         msgSimboloOficiales     db "Símbolo para los oficiales:", 0
   162 00000463 70617261206C6F7320-
   162 0000046C 6F66696369616C6573-
   162 00000475 3A00               
   163 00000477 53C3AD6D626F6C6F20-         msgSimboloSoldados      db "Símbolo para los soldados:", 0
   163 00000480 70617261206C6F7320-
   163 00000489 736F6C6461646F733A-
   163 00000492 00                 
   164                                  
   165 00000493 C2BF517569C3A96E20-         msgQuienInicia          db "¿Quién inicia el juego: oficiales o soldados? (o/s): ", 0
   165 0000049C 696E6963696120656C-
   165 000004A5 206A7565676F3A206F-
   165 000004AE 66696369616C657320-
   165 000004B7 6F20736F6C6461646F-
   165 000004C0 733F20286F2F73293A-
   165 000004C9 2000               
   166                                  
   167 000004CB C2A1556E206F666963-         msgOficialRetirado      db "¡Un oficial ha sido retirado del juego! Se ha olvidado de atrapar a un soldado.", 0
   167 000004D4 69616C206861207369-
   167 000004DD 646F20726574697261-
   167 000004E6 646F2064656C206A75-
   167 000004EF 65676F212053652068-
   167 000004F8 61206F6C7669646164-
   167 00000501 6F2064652061747261-
   167 0000050A 706172206120756E20-
   167 00000513 736F6C6461646F2E00 
   168                                  
   169 0000051C 4F66696369616C2031-         msgOficial1             db "Oficial 1:", 0
   169 00000525 3A00               
   170 00000527 4F66696369616C2032-         msgOficial2             db "Oficial 2:", 0
   170 00000530 3A00               
   171                                  
   172 00000532 4D6F76696D69656E74-         msgCantMovimientos      db "Movimientos totales: %d", 0
   172 0000053B 6F7320746F74616C65-
   172 00000544 733A20256400       
   173 0000054A 2D2048616369612061-         msgCantAdelante         db "- Hacia adelante: %d", 0
   173 00000553 64656C616E74653A20-
   173 0000055C 256400             
   174 0000055F 2D204861636961206C-         msgCantDerecha          db "- Hacia la derecha: %d", 0
   174 00000568 612064657265636861-
   174 00000571 3A20256400         
   175 00000576 2D204861636961206C-         msgCantIzquierda        db "- Hacia la izquierda: %d", 0
   175 0000057F 6120697A7175696572-
   175 00000588 64613A20256400     
   176 0000058F 2D2048616369612061-         msgCantAtras            db "- Hacia atrás: %d", 0
   176 00000598 7472C3A1733A202564-
   176 000005A1 00                 
   177 000005A2 2D20456E2064696167-         msgCantDiagonal         db "- En diagonal: %d", 0
   177 000005AB 6F6E616C3A20256400 
   178                                  
   179 000005B4 C2A1456C206A756567-         msgJuegoTerminado       db "¡El juego ha terminado!", 0
   179 000005BD 6F206861207465726D-
   179 000005C6 696E61646F2100     
   180 000005CD C2A1456C2067616E61-         msgGanador              db "¡El ganador es el equipo de los %s!", 10, 0
   180 000005D6 646F7220657320656C-
   180 000005DF 2065717569706F2064-
   180 000005E8 65206C6F7320257321-
   180 000005F1 0A00               
   181 000005F3 736F6C6461646F7300          stringSoldados          db "soldados", 0
   182 000005FC 6F66696369616C6573-         stringOficiales         db "oficiales", 0
   182 00000605 00                 
   183                                  
   184 00000606 52617AC3B36E3A2025-         msgRazonGanador         db "Razón: %s", 0
   184 0000060F 7300               
   185                                  
   186                                      ; Se ha decidido salir de la partida
   187 00000611 536520686120646563-         msgSalidaPartida        db "Se ha decidido salir de la partida. ¿Desea guardarla? (y/n)", 0
   187 0000061A 696469646F2073616C-
   187 00000623 6972206465206C6120-
   187 0000062C 706172746964612E20-
   187 00000635 C2BF44657365612067-
   187 0000063E 7561726461726C613F-
   187 00000647 2028792F6E2900     
   188 0000064E 6E                          guardadoPartida         db 'n' ; guardar (y), no guardar (n)
   189                                  
   190                                      ; Razones de victoria de soldados
   191 0000064F 6C6F7320736F6C6461-         msgSoldadosFortaleza    db "los soldados han ocupado todos los puntos de la fortaleza.", 0
   191 00000658 646F732068616E206F-
   191 00000661 63757061646F20746F-
   191 0000066A 646F73206C6F732070-
   191 00000673 756E746F7320646520-
   191 0000067C 6C6120666F7274616C-
   191 00000685 657A612E00         
   192 0000068A 6C6F7320736F6C6461-         msgSoldadosRodean       db "los soldados han rodeado a los oficiales.", 0
   192 00000693 646F732068616E2072-
   192 0000069C 6F646561646F206120-
   192 000006A5 6C6F73206F66696369-
   192 000006AE 616C65732E00       
   193 000006B4 616D626F73206F6669-         msgSoldadosInvalidar    db "ambos oficiales han sido invalidados."
   193 000006BD 6369616C6573206861-
   193 000006C6 6E207369646F20696E-
   193 000006CF 76616C696461646F73-
   193 000006D8 2E                 
   194                                  
   195                                      ; Razones de victoria de oficiales
   196 000006D9 6E6F2071756564616E-         msgOficialesGanan       db "no quedan suficientes soldados para ocupar la fortaleza.", 0
   196 000006E2 20737566696369656E-
   196 000006EB 74657320736F6C6461-
   196 000006F4 646F73207061726120-
   196 000006FD 6F6375706172206C61-
   196 00000706 20666F7274616C657A-
   196 0000070F 612E00             
   197                                  
   198                                      ; Turnos
   199 00000712 4573207475726E6F20-         msgTurnoSoldados        db "Es turno de los soldados. Decida a qué soldado desea mover: (<numFila>-<numColumna>)", 0
   199 0000071B 6465206C6F7320736F-
   199 00000724 6C6461646F732E2044-
   199 0000072D 656369646120612071-
   199 00000736 75C3A920736F6C6461-
   199 0000073F 646F20646573656120-
   199 00000748 6D6F7665723A20283C-
   199 00000751 6E756D46696C613E2D-
   199 0000075A 3C6E756D436F6C756D-
   199 00000763 6E613E2900         
   200 00000768 4573207475726E6F20-         msgTurnoOficiales       db "Es turno de los oficiales. Decida a qué oficial desea mover: (<numFila>-<numColumna>)", 0
   200 00000771 6465206C6F73206F66-
   200 0000077A 696369616C65732E20-
   200 00000783 446563696461206120-
   200 0000078C 7175C3A9206F666963-
   200 00000795 69616C206465736561-
   200 0000079E 206D6F7665723A2028-
   200 000007A7 3C6E756D46696C613E-
   200 000007B0 2D3C6E756D436F6C75-
   200 000007B9 6D6E613E2900       
   201 000007BF C2BF41207175C3A920-         msgTurnoMovSold         db "¿A qué casilla desea mover el soldado? (<numFila>-<numColumna>)", 0
   201 000007C8 636173696C6C612064-
   201 000007D1 65736561206D6F7665-
   201 000007DA 7220656C20736F6C64-
   201 000007E3 61646F3F20283C6E75-
   201 000007EC 6D46696C613E2D3C6E-
   201 000007F5 756D436F6C756D6E61-
   201 000007FE 3E2900             
   202 00000801 C2BF41207175C3A920-         msgTurnoMovOfic         db "¿A qué casilla desea mover el oficial? (<numFila>-<numColumna>)", 0
   202 0000080A 636173696C6C612064-
   202 00000813 65736561206D6F7665-
   202 0000081C 7220656C206F666963-
   202 00000825 69616C3F20283C6E75-
   202 0000082E 6D46696C613E2D3C6E-
   202 00000837 756D436F6C756D6E61-
   202 00000840 3E2900             
   203                                  
   204 00000843 556E206F6669636961-         msgCapturaSold          db "Un oficial ha capturado a un soldado.", 0
   204 0000084C 6C2068612063617074-
   204 00000855 757261646F20612075-
   204 0000085E 6E20736F6C6461646F-
   204 00000867 2E00               
   205 00000869 C2A1556E206F666963-         msgInvalidOfic          db "¡Un oficial ha sido invalidado! No ha capturado a un soldado regalado.", 0
   205 00000872 69616C206861207369-
   205 0000087B 646F20696E76616C69-
   205 00000884 6461646F21204E6F20-
   205 0000088D 686120636170747572-
   205 00000896 61646F206120756E20-
   205 0000089F 736F6C6461646F2072-
   205 000008A8 6567616C61646F2E00 
   206                                      
   207                                      ; Contadores
   208                                  
   209 000008B1 00                          movimientosOfic1        db 0
   210 000008B2 00                          movimientosOfic2        db 0
   211                                      
   212 000008B3 00                          movOfic1Adelante        db 0
   213 000008B4 00                          movOfic1Derecha         db 0
   214 000008B5 00                          movOfic1Izquierda       db 0
   215 000008B6 00                          movOfic1Atras           db 0
   216 000008B7 00                          movOfic1Diagonal        db 0
   217                                  
   218 000008B8 00                          movOfic2Adelante        db 0
   219 000008B9 00                          movOfic2Derecha         db 0
   220 000008BA 00                          movOfic2Izquierda       db 0
   221 000008BB 00                          movOfic2Atras           db 0
   222 000008BC 00                          movOfic2Diagonal        db 0
   223                                  
   224 000008BD 00                          cantSoldCapturados      db 0
   225 000008BE 00                          cantOficInvalidados     db 0
   226                                  
   227 000008BF 4F00                        simboloOficiales        db 'O', 0
   228 000008C1 5800                        simboloSoldados         db 'X', 0
   229 000008C3 04                          orientacionTablero      db  4       ; 4 -> no rotar (default) 
   230 000008C4 73                          piezaDeInicio           db 's'      ; soldados (s), oficiales (o)
   231                                  
   232                                      ; Comandos 
   233                                  
   234 000008C5 636C65617200                cmdLimpiarPantalla      db "clear", 0
   235                                  
   236                                      ; Formato
   237                                  
   238 000008CB 257500                      formatoAtoi             db "%u", 0
   239                                  
   240 000008CE 313233343500                string db "12345", 0
   241 000008D4 0000000000000000            numero dq 0
   242                                  
   243                                  
   244                                  
   245                                  section .bss
   246                                  
   247 00000000 ????????                    eleccionRotar       resd 1  ; Variable pivote para la elección de rotar el tablero
   248 00000004 ????????                    rotacionElegida     resd 1  ; Variable pivote para la rotación del tablero
   249                                  
   250 00000008 ????????                    simbOficElegido     resd 1  ; Variable pivote para el símbolo de los oficiales
   251 0000000C ????????                    simbSoldElegido     resd 1  ; Variable pivote para el símbolo de los soldados
   252                                  
   253 00000010 ????????                    piezaIniElegida     resd 1  ; Variable pivote para la pieza que inicia
   254                                  
   255 00000014 <res 74h>                   tableroEnJuego      resb 116 ; Tablero en juego
   256                                  
   257 00000088 ????????                    soldadoElegido      resb 4  ; Fila y columna del soldado a mover
   258 0000008C ????????                    casillaMovSold      resb 4  ; Fila y columna de la casilla de destino del soldado
   259                                  
   260 00000090 ????????                    oficialElegido      resb 4  ; Fila y columna del oficial a mover
   261 00000094 ????????                    casillaMovOfic      resb 4  ; Fila y columna de la casilla de destino del oficial
   262                                  
   263 00000098 ????????????????            fila                resq 1
   264 000000A0 ????????????????            columna             resq 1   
   265                                  
   266                                  section .text
   267                                      global main
   268                                  
   269                                  main:
   270                                  
   271                                      mPuts msgBienvenida
     2 00000000 48BF-               <1>  mov rdi, %1
     2 00000002 [CB01000000000000]  <1>
     3 0000000A 4883EC08            <1>  sub rsp, 8
     4 0000000E E8(00000000)        <1>  call puts
     5 00000013 4883C408            <1>  add rsp, 8
   272                                  
   273                                      personalizar:
   274 00000017 C70425[00000000]00-             mov dword[eleccionRotar], ''    ; vaciar variable
   274 0000001F 000000             
   275                                          mPuts msgPersonalizarTablero
     2 00000022 48BF-               <1>  mov rdi, %1
     2 00000024 [EC01000000000000]  <1>
     3 0000002C 4883EC08            <1>  sub rsp, 8
     4 00000030 E8(00000000)        <1>  call puts
     5 00000035 4883C408            <1>  add rsp, 8
   276                                          mGets eleccionRotar
    17 00000039 48BF-               <1>  mov rdi, %1
    17 0000003B [0000000000000000]  <1>
    18 00000043 4883EC08            <1>  sub rsp, 8
    19 00000047 E8(00000000)        <1>  call gets
    20 0000004C 4883C408            <1>  add rsp, 8
   277                                  
   278 00000050 833C25[00000000]6E              cmp dword[eleccionRotar], 'n' 
   279 00000058 0F845D010000                    je comenzarPartida
   280 0000005E 833C25[00000000]73              cmp dword[eleccionRotar], 's'
   281 00000066 7419                            je personalizarRotacion
   282                                  
   283                                          mErrorJump msgOpcionInvalida, personalizar
    45                              <1>  mPuts %1
     2 00000068 48BF-               <2>  mov rdi, %1
     2 0000006A [1502000000000000]  <2>
     3 00000072 4883EC08            <2>  sub rsp, 8
     4 00000076 E8(00000000)        <2>  call puts
     5 0000007B 4883C408            <2>  add rsp, 8
    46 0000007F EB96                <1>  jmp %2
   284                                  
   285                                      personalizarRotacion:
   286                                          mPuts msgPregRotacion
     2 00000081 48BF-               <1>  mov rdi, %1
     2 00000083 [4403000000000000]  <1>
     3 0000008B 4883EC08            <1>  sub rsp, 8
     4 0000008F E8(00000000)        <1>  call puts
     5 00000094 4883C408            <1>  add rsp, 8
   287                                          mPuts msgRotacionesPosibles
     2 00000098 48BF-               <1>  mov rdi, %1
     2 0000009A [8203000000000000]  <1>
     3 000000A2 4883EC08            <1>  sub rsp, 8
     4 000000A6 E8(00000000)        <1>  call puts
     5 000000AB 4883C408            <1>  add rsp, 8
   288                                  
   289 000000AF C70425[04000000]00-             mov dword[rotacionElegida], '' ; limpiar variable
   289 000000B7 000000             
   290                                          mGets rotacionElegida
    17 000000BA 48BF-               <1>  mov rdi, %1
    17 000000BC [0400000000000000]  <1>
    18 000000C4 4883EC08            <1>  sub rsp, 8
    19 000000C8 E8(00000000)        <1>  call gets
    20 000000CD 4883C408            <1>  add rsp, 8
   291                                  
   292                                          mMov orientacionTablero, rotacionElegida, 1
    31 000000D1 B901000000          <1>  mov rcx, %3
    32 000000D6 488D3425[04000000]  <1>  lea rsi, [%2]
    33 000000DE 488D3C25[C3080000]  <1>  lea rdi, [%1]
    34 000000E6 F3A4                <1>  rep movsb
   293                                          
   294 000000E8 833C25[04000000]31              cmp dword[rotacionElegida], '1'
   295 000000F0 7C0C                            jl invalidaRotacion
   296 000000F2 833C25[04000000]34              cmp dword[rotacionElegida], '4'
   297 000000FA 7F02                            jg invalidaRotacion
   298                                  
   299 000000FC EB1C                            jmp personalizarSimbolos
   300                                  
   301                                      invalidaRotacion:
   302                                          mErrorJump msgOpcionInvalida, personalizarRotacion
    45                              <1>  mPuts %1
     2 000000FE 48BF-               <2>  mov rdi, %1
     2 00000100 [1502000000000000]  <2>
     3 00000108 4883EC08            <2>  sub rsp, 8
     4 0000010C E8(00000000)        <2>  call puts
     5 00000111 4883C408            <2>  add rsp, 8
    46 00000115 E967FFFFFF          <1>  jmp %2
   303                                  
   304                                      personalizarSimbolos:
   305                                          mPuts msgPersonalizarSimb
     2 0000011A 48BF-               <1>  mov rdi, %1
     2 0000011C [D303000000000000]  <1>
     3 00000124 4883EC08            <1>  sub rsp, 8
     4 00000128 E8(00000000)        <1>  call puts
     5 0000012D 4883C408            <1>  add rsp, 8
   306                                  
   307 00000131 E851020000                      call setearSimbSoldados
   308 00000136 E8C1020000                      call setearSimbOficiales
   309                                          
   310                                      personalizarQuienInicia:
   311 0000013B C70425[10000000]00-             mov dword[piezaIniElegida], ''    ; vaciar variable
   311 00000143 000000             
   312                                          mPuts msgQuienInicia
     2 00000146 48BF-               <1>  mov rdi, %1
     2 00000148 [9304000000000000]  <1>
     3 00000150 4883EC08            <1>  sub rsp, 8
     4 00000154 E8(00000000)        <1>  call puts
     5 00000159 4883C408            <1>  add rsp, 8
   313                                          mGets piezaIniElegida
    17 0000015D 48BF-               <1>  mov rdi, %1
    17 0000015F [1000000000000000]  <1>
    18 00000167 4883EC08            <1>  sub rsp, 8
    19 0000016B E8(00000000)        <1>  call gets
    20 00000170 4883C408            <1>  add rsp, 8
   314                                  
   315 00000174 833C25[10000000]6F              cmp dword[piezaIniElegida], 'o' 
   316 0000017C 7423                            je setearPiezaInicio
   317 0000017E 833C25[10000000]73              cmp dword[piezaIniElegida], 's'
   318 00000186 7419                            je setearPiezaInicio
   319                                  
   320                                          mErrorJump msgOpcionInvalida, personalizarQuienInicia
    45                              <1>  mPuts %1
     2 00000188 48BF-               <2>  mov rdi, %1
     2 0000018A [1502000000000000]  <2>
     3 00000192 4883EC08            <2>  sub rsp, 8
     4 00000196 E8(00000000)        <2>  call puts
     5 0000019B 4883C408            <2>  add rsp, 8
    46 0000019F EB9A                <1>  jmp %2
   321                                  
   322                                          setearPiezaInicio:
   323                                              mMov piezaDeInicio, piezaIniElegida, 1
    31 000001A1 B901000000          <1>  mov rcx, %3
    32 000001A6 488D3425[10000000]  <1>  lea rsi, [%2]
    33 000001AE 488D3C25[C4080000]  <1>  lea rdi, [%1]
    34 000001B6 F3A4                <1>  rep movsb
   324 000001B8 EB01                                jmp comenzarPartida
   325                                      
   326 000001BA C3                          ret
   327                                  
   328                                  comenzarPartida:
   329                                      ; Se debe mostrar el tablero (en la orientacion indicada y con los simbolos indicados), 
   330                                      ; y se debe mostrar el mensaje de turno en base a lo que haya personalizado el usuario.
   331 000001BB 803C25[C3080000]31              cmp byte[orientacionTablero], '1'
   332 000001C3 7443                            je rotarIzquierda
   333 000001C5 803C25[C3080000]32              cmp byte[orientacionTablero], '2'
   334 000001CD 7452                            je rotarDerecha
   335 000001CF 803C25[C3080000]33              cmp byte[orientacionTablero], '3'
   336 000001D7 7461                            je rotarInvertir
   337                                  
   338                                          mMov tableroEnJuego, tableroOrig, 116
    31 000001D9 B974000000          <1>  mov rcx, %3
    32 000001DE 488D3425[00000000]  <1>  lea rsi, [%2]
    33 000001E6 488D3C25[14000000]  <1>  lea rdi, [%1]
    34 000001EE F3A4                <1>  rep movsb
   339                                  
   340                                          comenzarPorInicio:
   341 000001F0 803C25[C4080000]73                  cmp byte[piezaDeInicio], 's'
   342 000001F8 7459                                je turnoSoldados
   343 000001FA 803C25[C4080000]6F                  cmp byte[piezaDeInicio], 'o'
   344 00000202 0F84E2000000                        je turnoOficiales
   345                                  
   346                                      rotarIzquierda:
   347                                          mMov tableroEnJuego, tableroIzq, 116
    31 00000208 B974000000          <1>  mov rcx, %3
    32 0000020D 488D3425[57010000]  <1>  lea rsi, [%2]
    33 00000215 488D3C25[14000000]  <1>  lea rdi, [%1]
    34 0000021D F3A4                <1>  rep movsb
   348 0000021F EBCF                            jmp comenzarPorInicio
   349                                      
   350                                      rotarDerecha:
   351                                          mMov tableroEnJuego, tableroDer, 116
    31 00000221 B974000000          <1>  mov rcx, %3
    32 00000226 488D3425[E3000000]  <1>  lea rsi, [%2]
    33 0000022E 488D3C25[14000000]  <1>  lea rdi, [%1]
    34 00000236 F3A4                <1>  rep movsb
   352 00000238 EBB6                            jmp comenzarPorInicio
   353                                  
   354                                      rotarInvertir:
   355                                          mMov tableroEnJuego, tableroInv, 116
    31 0000023A B974000000          <1>  mov rcx, %3
    32 0000023F 488D3425[6F000000]  <1>  lea rsi, [%2]
    33 00000247 488D3C25[14000000]  <1>  lea rdi, [%1]
    34 0000024F F3A4                <1>  rep movsb
   356 00000251 EB9D                            jmp comenzarPorInicio
   357                                  
   358                                  loopMovimientos:; mostrarTablero, mostrarTurno, realizarMovimiento, verificarFinJuego
   359                                      turnoSoldados:
   360 00000253 C60425[88000000]30              mov byte [soldadoElegido], '0'
   361                                      
   362                                          mCommand cmdLimpiarPantalla ; Limpia la pantalla para mostrar el tablero
    24 0000025B 48BF-               <1>  mov rdi, %1
    24 0000025D [C508000000000000]  <1>
    25 00000265 4883EC08            <1>  sub rsp, 8
    26 00000269 E8(00000000)        <1>  call system
    27 0000026E 4883C408            <1>  add rsp, 8
   363                                  
   364                                          mPuts tableroEnJuego ; Muestro el tablero
     2 00000272 48BF-               <1>  mov rdi, %1
     2 00000274 [1400000000000000]  <1>
     3 0000027C 4883EC08            <1>  sub rsp, 8
     4 00000280 E8(00000000)        <1>  call puts
     5 00000285 4883C408            <1>  add rsp, 8
   365                                  
   366                                          mPuts msgTurnoSoldados      ; Muestro el mensaje de seleccionar ficha a mover
     2 00000289 48BF-               <1>  mov rdi, %1
     2 0000028B [1207000000000000]  <1>
     3 00000293 4883EC08            <1>  sub rsp, 8
     4 00000297 E8(00000000)        <1>  call puts
     5 0000029C 4883C408            <1>  add rsp, 8
   367                                          mGets soldadoElegido    ; Obtengo la ficha a mover
    17 000002A0 48BF-               <1>  mov rdi, %1
    17 000002A2 [8800000000000000]  <1>
    18 000002AA 4883EC08            <1>  sub rsp, 8
    19 000002AE E8(00000000)        <1>  call gets
    20 000002B3 4883C408            <1>  add rsp, 8
   368                                          
   369 000002B7 E9B5010000                      jmp verificarFichaSold ; verificar si la ficha elegida es valida
   370                                  
   371                                          casillaAMoverseSold:
   372                                  
   373                                              mPuts msgTurnoMovSold   ; Muestro el mensaje de seleccionar casilla a mover
     2 000002BC 48BF-               <1>  mov rdi, %1
     2 000002BE [BF07000000000000]  <1>
     3 000002C6 4883EC08            <1>  sub rsp, 8
     4 000002CA E8(00000000)        <1>  call puts
     5 000002CF 4883C408            <1>  add rsp, 8
   374                                              mGets casillaMovSold    ; Obtengo la casilla a mover
    17 000002D3 48BF-               <1>  mov rdi, %1
    17 000002D5 [8C00000000000000]  <1>
    18 000002DD 4883EC08            <1>  sub rsp, 8
    19 000002E1 E8(00000000)        <1>  call gets
    20 000002E6 4883C408            <1>  add rsp, 8
   375                                              
   376                                              ;jmp verificarMovimientoSold ; verificar si el movimiento es valido
   377                                  
   378                                              ;jmp realizarMovimiento ; Realizo el movimiento
   379                                  
   380                                          
   381                                      turnoOficiales:
   382 000002EA C60425[90000000]30              mov byte[oficialElegido], '0'
   383                                          
   384                                          mCommand cmdLimpiarPantalla ; Limpia la pantalla para mostrar el tablero
    24 000002F2 48BF-               <1>  mov rdi, %1
    24 000002F4 [C508000000000000]  <1>
    25 000002FC 4883EC08            <1>  sub rsp, 8
    26 00000300 E8(00000000)        <1>  call system
    27 00000305 4883C408            <1>  add rsp, 8
   385                                  
   386                                          mPuts tableroEnJuego ; Muestro el tablero
     2 00000309 48BF-               <1>  mov rdi, %1
     2 0000030B [1400000000000000]  <1>
     3 00000313 4883EC08            <1>  sub rsp, 8
     4 00000317 E8(00000000)        <1>  call puts
     5 0000031C 4883C408            <1>  add rsp, 8
   387                                  
   388                                          mPuts msgTurnoOficiales ; Muestro el mensaje de seleccionar ficha a mover
     2 00000320 48BF-               <1>  mov rdi, %1
     2 00000322 [6807000000000000]  <1>
     3 0000032A 4883EC08            <1>  sub rsp, 8
     4 0000032E E8(00000000)        <1>  call puts
     5 00000333 4883C408            <1>  add rsp, 8
   389                                          mGets oficialElegido    ; Obtengo la ficha a mover
    17 00000337 48BF-               <1>  mov rdi, %1
    17 00000339 [9000000000000000]  <1>
    18 00000341 4883EC08            <1>  sub rsp, 8
    19 00000345 E8(00000000)        <1>  call gets
    20 0000034A 4883C408            <1>  add rsp, 8
   390                                  
   391 0000034E E966020000                      jmp verificarFichaOfic ; verificar si la ficha elegida es valida
   392                                  
   393                                          casillaAMoverseOfic:
   394                                  
   395                                              mPuts msgTurnoMovOfic   ; Muestro el mensaje de seleccionar casilla a mover
     2 00000353 48BF-               <1>  mov rdi, %1
     2 00000355 [0108000000000000]  <1>
     3 0000035D 4883EC08            <1>  sub rsp, 8
     4 00000361 E8(00000000)        <1>  call puts
     5 00000366 4883C408            <1>  add rsp, 8
   396                                              mGets casillaMovOfic    ; Obtengo la casilla a mover
    17 0000036A 48BF-               <1>  mov rdi, %1
    17 0000036C [9400000000000000]  <1>
    18 00000374 4883EC08            <1>  sub rsp, 8
    19 00000378 E8(00000000)        <1>  call gets
    20 0000037D 4883C408            <1>  add rsp, 8
   397                                              
   398                                              ;jmp verificarMovimientoOfic ; verificar si el movimiento es valido
   399                                  
   400                                              ;jmp realizarMovimiento ; Realizo el movimiento
   401                                  
   402                                              ; Repetir en loop
   403 00000381 E9CDFEFFFF                          jmp loopMovimientos
   404                                  
   405 00000386 C3                          ret
   406                                  
   407                                  
   408                                  
   409                                  
   410                                  
   411                                  setearSimbSoldados:
   412                                      mPuts msgSimboloSoldados
     2 00000387 48BF-               <1>  mov rdi, %1
     2 00000389 [7704000000000000]  <1>
     3 00000391 4883EC08            <1>  sub rsp, 8
     4 00000395 E8(00000000)        <1>  call puts
     5 0000039A 4883C408            <1>  add rsp, 8
   413 0000039E C70425[0C000000]00-         mov dword[simbSoldElegido], ''
   413 000003A6 000000             
   414                                      mGets simbSoldElegido
    17 000003A9 48BF-               <1>  mov rdi, %1
    17 000003AB [0C00000000000000]  <1>
    18 000003B3 4883EC08            <1>  sub rsp, 8
    19 000003B7 E8(00000000)        <1>  call gets
    20 000003BC 4883C408            <1>  add rsp, 8
   415                                  
   416 000003C0 803C25[0C000000]20          cmp byte[simbSoldElegido], ' '
   417 000003C8 7419                        je errSeteoSoldado
   418 000003CA 803C25[0C000000]00          cmp byte[simbSoldElegido], ''
   419 000003D2 740F                        je errSeteoSoldado
   420                                  
   421 000003D4 8A0425[0C000000]            mov al, byte[simbSoldElegido]
   422 000003DB 880425[C1080000]            mov byte[simboloSoldados], al
   423                                  
   424 000003E2 C3                          ret
   425                                  
   426                                      errSeteoSoldado:
   427                                          mErrorJump msgOpcionInvalida, setearSimbSoldados
    45                              <1>  mPuts %1
     2 000003E3 48BF-               <2>  mov rdi, %1
     2 000003E5 [1502000000000000]  <2>
     3 000003ED 4883EC08            <2>  sub rsp, 8
     4 000003F1 E8(00000000)        <2>  call puts
     5 000003F6 4883C408            <2>  add rsp, 8
    46 000003FA EB8B                <1>  jmp %2
   428                                  
   429                                  
   430                                  setearSimbOficiales:
   431                                      mPuts msgSimboloOficiales
     2 000003FC 48BF-               <1>  mov rdi, %1
     2 000003FE [5A04000000000000]  <1>
     3 00000406 4883EC08            <1>  sub rsp, 8
     4 0000040A E8(00000000)        <1>  call puts
     5 0000040F 4883C408            <1>  add rsp, 8
   432 00000413 C70425[08000000]00-         mov dword[simbOficElegido], ''
   432 0000041B 000000             
   433                                      mGets simbOficElegido
    17 0000041E 48BF-               <1>  mov rdi, %1
    17 00000420 [0800000000000000]  <1>
    18 00000428 4883EC08            <1>  sub rsp, 8
    19 0000042C E8(00000000)        <1>  call gets
    20 00000431 4883C408            <1>  add rsp, 8
   434                                  
   435 00000435 803C25[08000000]20          cmp byte[simbOficElegido], ' '
   436 0000043D 7419                        je errSeteoOficial
   437 0000043F 803C25[08000000]00          cmp byte[simbOficElegido], ''
   438 00000447 740F                        je errSeteoOficial
   439                                  
   440 00000449 8A0425[08000000]            mov al, byte[simbOficElegido]
   441 00000450 880425[BF080000]            mov byte[simboloOficiales], al
   442                                  
   443 00000457 C3                          ret
   444                                  
   445                                      errSeteoOficial:
   446                                          mPuts msgOpcionInvalida
     2 00000458 48BF-               <1>  mov rdi, %1
     2 0000045A [1502000000000000]  <1>
     3 00000462 4883EC08            <1>  sub rsp, 8
     4 00000466 E8(00000000)        <1>  call puts
     5 0000046B 4883C408            <1>  add rsp, 8
   447 0000046F EB8B                            jmp setearSimbOficiales
   448                                  
   449                                  
   450                                  verificarFichaSold:
   451 00000471 8A0425[88000000]            mov al, byte[soldadoElegido] ; Numero de fila
   452                                      
   453 00000478 3C31                        cmp al, '1'
   454 0000047A 0F8CF7000000                jl errorInputSold
   455 00000480 3C37                        cmp al, '7'
   456 00000482 0F8FEF000000                jg errorInputSold
   457                                  
   458 00000488 48C70425[98000000]-         mov qword[fila], 0
   458 00000490 00000000           
   459                                      mSscanf byte[soldadoElegido], formatoAtoi, fila
    69 00000494 488D3C25[88000000]  <1>  lea rdi, %1
    70 0000049C 48BE-               <1>  mov rsi, %2
    70 0000049E [CB08000000000000]  <1>
    71 000004A6 48BA-               <1>  mov rdx, %3
    71 000004A8 [9800000000000000]  <1>
    72 000004B0 4883EC08            <1>  sub rsp, 8
    73 000004B4 E8(00000000)        <1>  call sscanf
    74 000004B9 4883C408            <1>  add rsp, 8
   460                                  
   461 000004BD 4883F801                    cmp rax, 1
   462 000004C1 0F8CB0000000                jl errorInputSold
   463                                  
   464 000004C7 8A0425[89000000]            mov al, byte[soldadoElegido+1] ; Caracter '-'
   465 000004CE 3C2D                        cmp al, '-'
   466 000004D0 0F85A1000000                jne errorInputSold
   467                                      
   468 000004D6 8A0425[8A000000]            mov al, byte[soldadoElegido+2] ; Numero de columna
   469 000004DD 3C31                        cmp al, '1'
   470 000004DF 0F8C92000000                jl errorInputSold
   471 000004E5 3C37                        cmp al, '7'
   472 000004E7 0F8F8A000000                jg errorInputSold
   473                                  
   474 000004ED 48C70425[A0000000]-         mov qword[columna], 0
   474 000004F5 00000000           
   475                                      mSscanf byte[soldadoElegido+2], formatoAtoi, columna
    69 000004F9 488D3C25[8A000000]  <1>  lea rdi, %1
    70 00000501 48BE-               <1>  mov rsi, %2
    70 00000503 [CB08000000000000]  <1>
    71 0000050B 48BA-               <1>  mov rdx, %3
    71 0000050D [A000000000000000]  <1>
    72 00000515 4883EC08            <1>  sub rsp, 8
    73 00000519 E8(00000000)        <1>  call sscanf
    74 0000051E 4883C408            <1>  add rsp, 8
   476                                  
   477 00000522 4883F801                    cmp rax, 1
   478 00000526 7C4F                        jl errorInputSold
   479                                  
   480 00000528 8A0425[8B000000]            mov al, byte[soldadoElegido+3] ; Caracter nulo
   481 0000052F 3C00                        cmp al, 0
   482 00000531 7544                        jne errorInputSold
   483                                  
   484                                      ; Calculamos desplazamiento en tablero
   485 00000533 BB00000000                  mov rbx, 0
   486 00000538 488B1C25[98000000]          mov rbx, [fila]
   487 00000540 48FFC3                      inc rbx
   488 00000543 666BDB0B                    imul bx, 11
   489 00000547 48031C25[A0000000]          add rbx, [columna]
   490 0000054F 48FFC3                      inc rbx
   491                                      
   492 00000552 B800000000                  mov rax,0
   493 00000557 BA00000000                  mov rdx, 0
   494                                  
   495 0000055C 8A93[14000000]              mov dl, byte[tableroEnJuego+rbx]
   496 00000562 8A0425[C1080000]            mov al, [simboloSoldados]
   497                                  
   498 00000569 38C2                        cmp dl, al
   499 0000056B 752B                        jne errorCasillaInvalidaSold
   500                                      
   501 0000056D B800000000                  mov rax, 0
   502 00000572 E945FDFFFF                  jmp casillaAMoverseSold
   503                                  
   504                                      errorInputSold:
   505                                          mPuts msgErrorInputSold ; CREAR MENSAJE DE ERROR
     2 00000577 48BF-               <1>  mov rdi, %1
     2 00000579 [8102000000000000]  <1>
     3 00000581 4883EC08            <1>  sub rsp, 8
     4 00000585 E8(00000000)        <1>  call puts
     5 0000058A 4883C408            <1>  add rsp, 8
   506 0000058E B801000000                      mov rax, 1
   507 00000593 E9BBFCFFFF                      jmp turnoSoldados
   508                                  
   509                                      errorCasillaInvalidaSold:
   510                                          mPuts msgCasillaInvalidaSold ; CREAR MENSAJE DE CASILLA ERRÓNEA
     2 00000598 48BF-               <1>  mov rdi, %1
     2 0000059A [3A02000000000000]  <1>
     3 000005A2 4883EC08            <1>  sub rsp, 8
     4 000005A6 E8(00000000)        <1>  call puts
     5 000005AB 4883C408            <1>  add rsp, 8
   511 000005AF B801000000                      mov rax, 1
   512 000005B4 E99AFCFFFF                      jmp turnoSoldados
   513                                      
   514                                  
   515                                  verificarFichaOfic:
   516 000005B9 8A0C25[90000000]            mov cl, byte[oficialElegido] ; Numero de fila
   517                                      
   518 000005C0 80F931                      cmp cl, '1'
   519 000005C3 0F8CFC000000                jl errorInputOfic
   520 000005C9 80F937                      cmp cl, '7'
   521 000005CC 0F8FF3000000                jg errorInputOfic
   522                                      
   523 000005D2 48C70425[98000000]-         mov qword[fila], 0
   523 000005DA 00000000           
   524                                      mSscanf byte[oficialElegido], formatoAtoi, fila
    69 000005DE 488D3C25[90000000]  <1>  lea rdi, %1
    70 000005E6 48BE-               <1>  mov rsi, %2
    70 000005E8 [CB08000000000000]  <1>
    71 000005F0 48BA-               <1>  mov rdx, %3
    71 000005F2 [9800000000000000]  <1>
    72 000005FA 4883EC08            <1>  sub rsp, 8
    73 000005FE E8(00000000)        <1>  call sscanf
    74 00000603 4883C408            <1>  add rsp, 8
   525                                  
   526 00000607 4883F801                    cmp rax, 1
   527 0000060B 0F8CB4000000                jl errorInputOfic
   528                                  
   529 00000611 8A0C25[91000000]            mov cl, byte[oficialElegido+1] ; Caracter '-'
   530 00000618 80F92D                      cmp cl, '-'
   531 0000061B 0F85A4000000                jne errorInputOfic
   532                                      
   533 00000621 8A0C25[92000000]            mov cl, byte[oficialElegido+2] ; Numero de columna
   534 00000628 80F931                      cmp cl, '1'
   535 0000062B 0F8C94000000                jl errorInputOfic
   536 00000631 80F937                      cmp cl, '7'
   537 00000634 0F8F8B000000                jg errorInputOfic
   538                                  
   539 0000063A 48C70425[A0000000]-         mov qword[columna], 0
   539 00000642 00000000           
   540                                      mSscanf byte[oficialElegido+2], formatoAtoi, columna
    69 00000646 488D3C25[92000000]  <1>  lea rdi, %1
    70 0000064E 48BE-               <1>  mov rsi, %2
    70 00000650 [CB08000000000000]  <1>
    71 00000658 48BA-               <1>  mov rdx, %3
    71 0000065A [A000000000000000]  <1>
    72 00000662 4883EC08            <1>  sub rsp, 8
    73 00000666 E8(00000000)        <1>  call sscanf
    74 0000066B 4883C408            <1>  add rsp, 8
   541                                  
   542 0000066F 4883F801                    cmp rax, 1
   543 00000673 7C50                        jl errorInputOfic
   544                                  
   545 00000675 8A0C25[93000000]            mov cl, byte[oficialElegido+3] ; Caracter nulo
   546 0000067C 80F900                      cmp cl, 0
   547 0000067F 7544                        jne errorInputOfic
   548                                  
   549                                      ; Calculamos desplazamiento en tablero
   550 00000681 BB00000000                  mov rbx, 0
   551 00000686 488B1C25[98000000]          mov rbx, [fila]
   552 0000068E 48FFC3                      inc rbx
   553 00000691 666BDB0B                    imul bx, 11
   554 00000695 48031C25[A0000000]          add rbx, [columna]
   555 0000069D 48FFC3                      inc rbx
   556                                      
   557 000006A0 B800000000                  mov rax, 0
   558 000006A5 BA00000000                  mov rdx, 0
   559                                  
   560 000006AA 8A93[14000000]              mov dl, byte[tableroEnJuego+rbx]
   561 000006B0 8A0C25[BF080000]            mov cl, [simboloOficiales]
   562                                  
   563 000006B7 38CA                        cmp dl, cl
   564 000006B9 752B                        jne errorCasillaInvalidaOfic
   565                                      
   566 000006BB B800000000                  mov rax, 0
   567 000006C0 E98EFCFFFF                  jmp casillaAMoverseOfic
   568                                  
   569                                      errorInputOfic:
   570                                          mPuts msgErrorInputOfic ; CREAR MENSAJE DE ERROR
     2 000006C5 48BF-               <1>  mov rdi, %1
     2 000006C7 [0603000000000000]  <1>
     3 000006CF 4883EC08            <1>  sub rsp, 8
     4 000006D3 E8(00000000)        <1>  call puts
     5 000006D8 4883C408            <1>  add rsp, 8
   571 000006DC B801000000                      mov rax, 1
   572 000006E1 E904FCFFFF                      jmp turnoOficiales
   573                                  
   574                                      errorCasillaInvalidaOfic:
   575                                          mPuts msgCasillaInvalidaOfic ; CREAR MENSAJE DE CASILLA ERRÓNEA
     2 000006E6 48BF-               <1>  mov rdi, %1
     2 000006E8 [BF02000000000000]  <1>
     3 000006F0 4883EC08            <1>  sub rsp, 8
     4 000006F4 E8(00000000)        <1>  call puts
     5 000006F9 4883C408            <1>  add rsp, 8
   576 000006FD B801000000                      mov rax, 1
   577 00000702 E9E3FBFFFF                      jmp turnoOficiales
   578                                  
   579                                  verificarMovimientoSold:
   580 00000707 C3                          ret
   581                                  
   582                                  verificarMovimientoOfic:
   583 00000708 C3                          ret
   584                                  
   585                                  realizarMovimiento:
   586 00000709 C3                          ret
   587                                  
